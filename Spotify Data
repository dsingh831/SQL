# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

SELECT * 
FROM SpotifyData;

##How many artists are in this DB? Answer is 48

SELECT distinct count(artist_name) AS num_artists
FROM BIT_DB.Spotifydata;

##What is the average duration of all songs? Answer is 2.77 Mintes!

SELECT ROUND(avg(duration_ms/60000),2) AS avg_duration_mins
FROM spotifydata;

##All artists in alp order

SELECT distinct artist_name AS Name
FROM spotifydata
ORDER BY Name;

##All songs with tempos above 120 and their respective artists. Filtering for how danceable the song is.

SELECT track_name AS song
, tempo
, artist_name
FROM spotifydata
WHERE tempo>=120
AND danceability>=.5;

##Top 10 Most Popular Songs

SELECT track_name AS song
, popularity
FROM spotifydata LIMIT 10;

